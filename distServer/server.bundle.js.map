{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/common/reduxModules/viewModule.js","webpack:///external \"redux-thunk\"","webpack:///external \"redux\"","webpack:///./src/common/configureStore.js","webpack:///external \"react-dom\"","webpack:///./src/common/App.jsx","webpack:///external \"react-router\"","webpack:///external \"react-redux\"","webpack:///external \"react-dom/server\"","webpack:///./src/server/ssr/ssrFunctions.jsx","webpack:///external \"helmet\"","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express\"","webpack:///./src/server/server.js","webpack:///external \"babel-polyfill\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","showFlex","size","toggleFlex","display","initialState","updateScreenSize","type","screenSize","toggleLinks","toggleDashSideNav","window","_typeof","innerWidth","view","state","arguments","length","undefined","action","_extends","showBlock","showNav","showDashSideNav","preloadedState","_redux","createStore","reducers","compose","applyMiddleware","thunk","devToolsExtension","f","_reduxThunk","_viewModule","combineReducers","_react","App","Component","_react2","default","createElement","Fragment","_callee","req","res","store","context","html","regeneratorRuntime","wrap","_context","prev","next","_configureStore2","getState","_server","renderToString","_reactRedux","Provider","_reactRouter","StaticRouter","location","url","_App2","send","renderFullPage","stop","this","JSON","stringify","replace","handleRender","getData","e","_ssrFunctions","app","_express2","use","_helmet2","_morgan2","port","process","env","PORT","bodyParser","urlencoded","extended","json","express","static","console","log","listen"],"mappings":"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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"react\");","const updateView = 'redux/view/UPDATE_SCREEN_SIZE';\nconst toggleNav = 'redux/view/TOGGLE_NAV';\nconst toggleDashSide = 'redux/view/TOGGLE_DASH_NAV';\n\n\n// -----------------------------------------------------------//\n// css state based on screen width\nconst maxSize = 812;\n\nconst showFlex = size => (size < maxSize ? 'none' : 'flex');\n\nconst showBlock = size => (size < maxSize ? 'none' : 'block');\n\n/* toggle display\n* if display is less than maxsize and\n* is none -> change to flex\n* else if it's flex -> change to none\n*/\nconst toggleFlex = (size, display) => {\n  if (size < maxSize) {\n    return display === 'none' ? 'flex' : 'none';\n  }\n  return 'flex';\n};\n\n/*\nconst toggleBlock = (size, display) => {\n  if (size < maxSize) {\n    return display === 'none' ? 'block' : 'none';\n  }\n  return 'block';\n};\n*/\n\n// -----------------------------------------------------------//\n\n\n// action creator\nexport const updateScreenSize = size => ({\n  type: updateView,\n  screenSize: size,\n});\n\nexport const toggleLinks = () => ({\n  type: toggleNav,\n});\n\nexport const toggleDashSideNav = () => ({\n  type: toggleDashSide,\n});\n\n\n// initial state\nconst initialState = {\n  screenSize: typeof window === 'object' ? window.innerWidth : null,\n\n};\n\n\n// reducer\nexport const view = (state = initialState, action) => {\n  switch (action.type) {\n    case updateView:\n      return {\n        ...state,\n        screenSize: action.screenSize,\n        showBlock: showBlock(action.screenSize),\n        showNav: showFlex(action.screenSize),\n        showDashSideNav: showFlex(action.screenSize),\n      };\n    case toggleNav:\n      return {\n        ...state,\n        showNav: toggleFlex(state.screenSize, state.showNav),\n      };\n    case toggleDashSide:\n      return {\n        ...state,\n        showDashSideNav: toggleFlex(state.screenSize, state.showDashSideNav),\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport default view;\n","module.exports = require(\"redux-thunk\");","module.exports = require(\"redux\");","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { view } from './reduxModules/viewModule';\n\n\nexport const reducers = combineReducers({\n  view,\n});\n\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    reducers,\n    preloadedState,\n    compose(\n      applyMiddleware(thunk),\n      typeof window !== 'undefined' &&\n                window.devToolsExtension ? window.devToolsExtension() : f => f,\n    ),\n  );\n}\n","module.exports = require(\"react-dom\");","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends Component {\n  render() {\n    // mapped out client routes for reactRouter\n    return (\n      <Fragment>\n        'hello react page!'\n      </Fragment>\n    )\n  }\n}\n\n\n\n\n// use withRouter to pass location to App\nexport default App;\n\n\n","module.exports = require(\"react-router\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-dom/server\");","import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { Provider } from 'react-redux';\nimport { StaticRouter as Router } from 'react-router';\nimport App from '../../common/App';\nimport configureStore from '../../common/configureStore';\n\n\n/*\n* Control flow\n* make redux store and fetch all required data\n* turn react component and redux data to string\n* inject those two data into the html page\n* on client, html takes stringified redux data and\n*  puts in into store\n*\n*/\n\n// create html and inject redux data into it\nfunction renderFullPage(html, preloadedState) {\n  return `\n    <!DOCTYPE html>\n    <html lang = \"en\">\n      <head>\n        <meta name=\"viewport\" \n          content=\"width=device-width, initial-scale=1\">\n        <meta charset = \"UTF-8\">\n        <link rel=\"icon\" href=\"data:;base64,iVBORwOKGO=\" />\n        <link rel='stylesheet' href=\"/styles.css\"/>\n      </head>\n      <body>\n        <div id=\"root\">${html}</div>\n        <script>\n        window.__PRELOADED_STATE__ = \n          ${JSON.stringify(preloadedState).replace(/</g, '\\\\u003c')}\n        </script>\n        <script src=\"/client.bundle.js\" ></script>\n      </body>\n    </html>\n  `;\n}\n\n\nasync function getData(req, res) {\n  // create store\n  const store = configureStore();\n\n  const preloadedState = store.getState();\n  const context = {};\n\n\n  // render component to string\n  const html = renderToString(\n    <Provider store={store}>\n      <Router context={context} location={req.url}>\n        <App />\n      </Router>\n    </Provider>);\n\n\n  // send to client\n  res.send(renderFullPage(html, preloadedState));\n}\n\nfunction handleRender(req, res) {\n  try {\n    getData(req, res);\n  }\n  catch (e) {\n    res.send('there was an error');\n  }\n}\n\nexport { handleRender, renderFullPage };\n\n","module.exports = require(\"helmet\");","module.exports = require(\"body-parser\");","module.exports = require(\"morgan\");","module.exports = require(\"express\");","import express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport helmet from 'helmet';\nimport { handleRender } from './ssr/ssrFunctions';\n\n\n// server\nconst app = express();\napp.use(helmet());\napp.use(morgan('dev'));\nconst port = process.env.PORT || 3000;\n\n\n// for parsing urlencoded && json in req.body\napp.use(bodyParser.urlencoded({\n  extended: true,\n}));\napp.use(bodyParser.json());\n\n\n// serve js files\napp.use(express.static('dist'));\napp.use(express.static('imgs'));\n\n\n// use handleRender for each request\n/*\napp.get('/', (req, res) => {\n  res.send('hello world');\n});\n*/\n\n\napp.use(handleRender);\n\n\n// Check mode\nif (app.get('env') === 'development') {\n  console.log('Development mode!');\n} else {\n  console.log('Production mode!');\n}\n\n\napp.listen(port, () => {\n  console.log(`Listening on port ${port}`);\n});\n\n","module.exports = require(\"babel-polyfill\");"],"sourceRoot":""}